paths <- fs::dir_ls('data/bee_imgs/')
image_list <- load.dir('.')
library(imager)
library(dplyr)
image_list <- load.dir('.')
image_list <- load.dir(paths)
apply_linear_kernel <- function(img, kernel) {
pad_size <- (nrow(kernel) - 1)/2
img <- padding_image(img = img, ncells = pad_size)
img_new <- outer(
X = (1 + pad_size):(nrow(img) - pad_size),
Y = (1 + pad_size):(ncol(img) - pad_size),
FUN = Vectorize(function(rw, cl) {
img_subset <- img[(rw - pad_size):(rw + pad_size),
(cl - pad_size):(cl + pad_size)]
result <- sum(img_subset * kernel)
return(result)
}))
return(minmax(img_new))
}
# Filtro Laplaciano
kernel_laplacian <- function(diagonals = F) {
if(diagonals) return(-1*matrix(c(1, 1, 1, 1, -8, 1, 1, 1, 1), 3))
else return(-1*matrix(c(0, 1, 0, 1, -4, 1, 0, 1, 0), 3))
}
var_laplacian <- sapply(image_list, function(img) {
img %>%
grayscale %>%
as.matrix %>%
apply_linear_kernel(., kernel_laplacian())
})
# ConvoluÃ§Ã£o
padding_image <- function(img, ncells) {
img_new <- matrix(0, nrow = nrow(img) + 2*ncells,
ncol = ncol(img) + 2*ncells)
img_new[ncells + 1:nrow(img), ncells + 1:ncol(img)] <- img
return(img_new)
}
apply_linear_kernel <- function(img, kernel) {
pad_size <- (nrow(kernel) - 1)/2
img <- padding_image(img = img, ncells = pad_size)
img_new <- outer(
X = (1 + pad_size):(nrow(img) - pad_size),
Y = (1 + pad_size):(ncol(img) - pad_size),
FUN = Vectorize(function(rw, cl) {
img_subset <- img[(rw - pad_size):(rw + pad_size),
(cl - pad_size):(cl + pad_size)]
result <- sum(img_subset * kernel)
return(result)
}))
return(minmax(img_new))
}
# Filtro Laplaciano
kernel_laplacian <- function(diagonals = F) {
if(diagonals) return(-1*matrix(c(1, 1, 1, 1, -8, 1, 1, 1, 1), 3))
else return(-1*matrix(c(0, 1, 0, 1, -4, 1, 0, 1, 0), 3))
}
var_laplacian <- sapply(image_list, function(img) {
img %>%
grayscale %>%
as.matrix %>%
apply_linear_kernel(., kernel_laplacian())
})
apply_linear_kernel <- function(img, kernel) {
pad_size <- (nrow(kernel) - 1)/2
img <- padding_image(img = img, ncells = pad_size)
img_new <- outer(
X = (1 + pad_size):(nrow(img) - pad_size),
Y = (1 + pad_size):(ncol(img) - pad_size),
FUN = Vectorize(function(rw, cl) {
img_subset <- img[(rw - pad_size):(rw + pad_size),
(cl - pad_size):(cl + pad_size)]
result <- sum(img_subset * kernel)
return(result)
}))
return(img_new)
}
var_laplacian <- sapply(image_list, function(img) {
img %>%
grayscale %>%
as.matrix %>%
apply_linear_kernel(., kernel_laplacian())
})
image_list[[1]]
dim(image_list[[1]])
dim(image_list[[1]])[4]
var_laplacian <- sapply(image_list, function(img) {
dim(img[[1]])[4]
# img %>%
#   grayscale %>%
#   as.matrix %>%
#   apply_linear_kernel(., kernel_laplacian())
})
var_laplacian
var_laplacian %>% unlist
dim(image_list[[1]])[4]
dim(image_list[[2]])[4]
dim(image_list[[3]])[4]
dim(image_list[[4]])[4]
dim(image_list[[40]])[4]
dim(image_list[[100]])[4]
dim(image_list[[1000]])[4]
dim(image_list[[2000]])[4]
dim(image_list[[3000]])[4]
var_laplacian <- sapply(image_list, function(img) {
img %>%
grayscale %>%
as.matrix %>%
apply_linear_kernel(., kernel_laplacian())
})
image_list[1:10]
var_laplacian <- sapply(image_list[1:10], function(img) {
img %>%
grayscale %>%
as.matrix %>%
apply_linear_kernel(., kernel_laplacian())
})
var_laplacian <- sapply(image_list[1:100], function(img) {
img %>%
grayscale %>%
as.matrix %>%
apply_linear_kernel(., kernel_laplacian())
})
var_laplacian <- sapply(image_list[1:1000], function(img) {
img %>%
grayscale %>%
as.matrix %>%
apply_linear_kernel(., kernel_laplacian())
})
var_laplacian <- sapply(image_list[1000:2000], function(img) {
img %>%
grayscale %>%
as.matrix %>%
apply_linear_kernel(., kernel_laplacian()) %>%
var
})
var_laplacian <- sapply(image_list[1:1000], function(img) {
img %>%
grayscale %>%
as.matrix %>%
apply_linear_kernel(., kernel_laplacian()) %>%
var
})
a <- sapply(image_list, function(x) {
dim(x)
})
a
a[1]
a[2]
a[3]
a <- sapply(image_list, function(x) {
dim(x)[4]
})
a
summary(a)
a[a > 3]
load.image('data/bee_imgs/009_057.png')
b <- load.image('data/bee_imgs/009_057.png')
b <- load.image('data/bee_imgs/bee_imgs/009_057.png')
b
var_laplacian <- sapply(image_list, function(img) {
if(dim(img) > 3) return(NULL)
img %>%
grayscale %>%
as.matrix %>%
apply_linear_kernel(., kernel_laplacian()) %>%
var
})
warnings()
var_laplacian <- sapply(image_list, function(img) {
if(dim(img)[4] > 3) return(NULL)
img %>%
grayscale %>%
as.matrix %>%
apply_linear_kernel(., kernel_laplacian()) %>%
var
})
var_laplacian
var_laplacian[1]
image_list[[1]] %>% grayscale()
image_list[[1]] %>% grayscale %>% apply_linear_kernel(., kernel_laplacian())
image_list[[1]] %>% grayscale %>% apply_linear_kernel(., kernel_laplacian()) %>% var
image_list[[1]] %>% grayscale %>% apply_linear_kernel(., kernel_laplacian()) %>% dim()
image_list[[1]] %>% grayscale %>% apply_linear_kernel(., kernel_laplacian()) %>% c %>% var
var_laplacian <- sapply(image_list, function(img) {
if(dim(img)[4] > 3) return(NULL)
img %>%
grayscale %>%
apply_linear_kernel(., kernel_laplacian()) %>%
c %>% var
})
var_laplacian
library(purrr)
image_list[[1]]
var_laplacian <- lapply(image_list, function(img) {
if(dim(img)[4] > 3) return(NULL)
img %>%
grayscale %>%
apply_linear_kernel(., kernel_laplacian()) %>%
c %>% var
})
var_laplacian
var_laplacian %>% as.data.frame()
var_laplacian %>% as_tibble()
do.call(bind_rows, var_laplacian)
do.call(rbind, var_laplacian)
library(tidyverse)
do.call(rbind, var_laplacian) %>% rownames_to_column()
do.call(rbind, var_laplacian) %>% as.data.frame %>% rownames_to_column()
var_laplacian <- lapply(image_list, function(img) {
if(dim(img)[4] > 3) return(NULL)
img %>%
grayscale %>%
apply_linear_kernel(., kernel_laplacian()) %>%
c %>% var
}) %>% do.call(rbind, .) %>%
as.data.frame %>% rownames_to_column
var_laplacian
var_laplacian %>% hist(V1)
var_laplacian$V1
var_laplacian$V1 %>% as.numeric()
var_laplacian$V1 %>% as.numeric() %>% hist
image_list[var_laplacian$V1 > 0.04]
unblur <- image_list[var_laplacian$V1 > 0.04]
unblur[1] %>% plot()
unblur[2] %>% plot()
unblur[3] %>% plot()
unblur[4] %>% plot()
unblur[5] %>% plot()
unblur[6] %>% plot()
unblur <- image_list[var_laplacian$V1 < 0.01]
unblur[1] %>% plot()
unblur[2] %>% plot()
unblur[3] %>% plot()
unblur[4] %>% plot()
unblur[5] %>% plot()
unblur[6] %>% plot()
unblur[7] %>% plot()
unblur[8] %>% plot()
unblur <- image_list[var_laplacian$V1 < 0.05]
unblur[1] %>% plot()
unblur[2] %>% plot()
unblur[3] %>% plot()
unblur[4] %>% plot()
unblur[5] %>% plot()
unblur[6] %>% plot()
unblur[7] %>% plot()
unblur[8] %>% plot()
